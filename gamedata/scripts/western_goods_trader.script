--[[
-- Info
-- 
-- Original Author(s) : NLTP_ASHES and Lauta_ro 
-- Edited : N/A
-- Date : 26/12/2022
-- License : Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0)
-- 
-- Script used to spawn the western goods trader and to manage specific aspects of him.
--]]

--[[----------------------------------------------------------------------------------------------------
	Constants and imported functions
------------------------------------------------------------------------------------------------------]]

local CONST_TRADER_SECTION = "stalker_western_goods_trader"
local CONST_TRADER_SQUAD = "stalker_western_goods_trader_squad"

local dbg_printf = western_goods_utils.dbg_printf
local round_number = western_goods_utils.round_number
local table_contains = western_goods_utils.table_contains
local table_random_id = western_goods_utils.table_random_id
local has_translation = western_goods_utils.has_translation
local get_translation = game.translate_string

--[[----------------------------------------------------------------------------------------------------
	Spawning the trader
------------------------------------------------------------------------------------------------------]]

-- Function used to spawn the trader on the map.
function spawn_western_goods_trader()
	UnregisterScriptCallback("actor_on_update", spawn_western_goods_trader)

	-- Make sure the trader isn't already spawned in
	for id,_ in pairs(SIMBOARD.squads) do
		if tostring(alife_object(id):section_name()) == CONST_TRADER_SQUAD then
			dbg_printf("[WG] Squad already exists ! | %s", tostring(alife_object(id):section_name()))
			return 
		end
	end

	local setting_ini = ini_file("misc\\simulation.ltx")

	-- Make sure the npc section is defined in misc\simulation.ltx and spawn him on the appropriate smart terrain
	local result, squad_section, count, li, lc
	setting_ini:section_for_each(function(section)
		local smart = SIMBOARD.smarts_by_names[section]
		if (smart) then
			lc = setting_ini:line_count(section)
			for li = 0, lc - 1 do
				result, squad_section, count = setting_ini:r_line(section,li,"","")
				if tostring(squad_section) == CONST_TRADER_SQUAD then
					dbg_printf("[WG] Spawning %s at %s", tostring(squad_section), smart:name())
					SIMBOARD:create_squad(smart, squad_section)
				end
			end
		end
	end)
end

--[[----------------------------------------------------------------------------------------------------
	Specific actions/restrictions
------------------------------------------------------------------------------------------------------]]

-- Function used to retrieve the list of tradable items (items of type "money") with the western goods trader.
local tradable_items = {}
function retrieve_tradable_items()
	-- Clear the cached list of tradable items
	tradable_items = {}

	-- Get the table of all items of the addon from western_goods_core
	local item_table = dup_table(western_goods_core.item_table)
	
	dbg_printf("[WG] Table received from western_goods_core has size of %s", #item_table)
	
	-- Go through the list of items in the addon, and keep only the items of type "money"
	for key,_ in pairs(item_table) do
		if western_goods_core.table_item_field_by_key(item_table, key, "type") == "money" then
		
			dbg_printf("[WG] Item %s marked as tradable with western goods trader", western_goods_core.table_item_field_by_key(item_table, key, "section"))
			
			table.insert(tradable_items, western_goods_core.table_item_field_by_key(item_table, key, "section"))
		end
	end
	
	dbg_printf("[WG] Assembled trade table :\n%s", utils_data.print_table(tradable_items, false, true))
end

-- Function used to allow/disallow the player from moving items from one container to another when trading with the western goods trader.
function check_move_item(flags, npc_id, obj, mode, bag)
	if mode ~= "trade" then return flags.ret_value end

	local npc = npc_id and alife_object(npc_id)
	local is_western_goods_trader = npc:section_name() == CONST_TRADER_SECTION

	-- If you are talking to the western goods trader and the item is not tradable, prevent the item from moving
	flags.ret_value = flags.ret_value and not is_western_goods_trader or is_tradable(npc, obj)
end

-- Function used to color the untradable items in the player inventory.
local bags_to_tint = { actor_equ = true, actor_bag = true, actor_trade = true, actor_trade_bag = true }
function tint_functor(cell)
	local ui_instance = ui_inventory.GUI
		
	if (not ui_instance)
	or (ui_instance.mode ~= "trade")
	or (not bags_to_tint[cell.container.ID])
	or (table_contains(tradable_items, cell.section))
	then return end
	
	local partner = ui_instance:GetPartner()
	
	if partner and partner:section() ~= CONST_TRADER_SECTION then return end
	
	-- If you're in the trade mode with the western goods trader, and the item isn't tradable, tint it in red
	return GetARGB(240, 250, 0, 0)
end

-- Function used to initiate the Barter UI.
function npc_barter()
	utils_obj.play_sound("interface\\inv_open")
	barter_ui.start()
end

-- Monkey-patching barter_ui.GUI_on_show to prevent the Barter button from showing if the NPC is the western goods trader.
GUI_on_showBase = barter_ui.GUI_on_show
function barter_ui.GUI_on_show(name, path)
	local ui_instance = ui_inventory.GUI
	if name ~= "UIInventory" or (not ui_instance) then return end

	local partner = ui_instance:GetPartner()

	if partner and partner:section() == CONST_TRADER_SECTION then return end
	
	GUI_on_showBase(name, path)
end

--[[----------------------------------------------------------------------------------------------------
	Callbacks registration
------------------------------------------------------------------------------------------------------]]

-- Function used to register callbacks.
function on_game_start()
	RegisterScriptCallback("actor_on_first_update", spawn_western_goods_trader)
	RegisterScriptCallback("actor_on_first_update", retrieve_tradable_items)
	RegisterScriptCallback("ActorMenu_on_item_before_move", check_move_item)
	rax_icon_tint.register("wg_tint_functor", tint_functor)
end

--[[----------------------------------------------------------------------------------------------------
	Utility functions
------------------------------------------------------------------------------------------------------]]

-- Function used to know if an object is tradable with the western goods trader.
function is_tradable(npc, obj)
	local is_in_npc_inv = utils_item.in_npc_inv(npc, obj)
	local is_in_actor_inv = utils_item.in_actor_inv(obj)
	local is_tradable_item = table_contains(tradable_items, obj:section())

	-- An item isn't tradable if it is in the player's and isn't present in the tradable_items table
	return is_in_npc_inv or (is_tradable_item and is_in_actor_inv)
end